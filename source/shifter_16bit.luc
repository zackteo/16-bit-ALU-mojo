module shifter_16bit (
    input a[16],
    input b[4],
    input alufn[2],
    output s[16]
  ) {
  
    sig shl_1b[16];
    sig shl_2b[16];
    sig shl_4b[16];
    sig shl_8b[16];
  
    sig shr_1b[16];
    sig shr_2b[16];
    sig shr_4b[16];
    sig shr_8b[16];
  
    sig sra_1b[16];
    sig sra_2b[16];
    sig sra_4b[16];
    sig sra_8b[16];
    
    sig shl[16];
    sig shr[16];
    sig sra[16];
  
  always {
    // shl
    if(b[4]) // move 8 bit
    {
        
    }
    
    //choosing output here
    if(alufn[1] & alufn[0]) //11 = SRA
    {
        s[15:0] = sra[15:0];
    }
    if(alufn[1] ^ alufn[0]) //assuming we will not give a wrong alufn.. 01 = SHR
    {
        s[15:0] = shr[15:0];
    }
    if(~alufn[1] & ~alufn[0]) //00 = shl
    {
        s[15:0] = shl[15:0];
    }
  }
}
