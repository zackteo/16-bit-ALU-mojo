module shifter_16bit (
    input a[16],
    input b[4],
    input alufn[6],
    output s[16]
  ) {
  
  always {
    // first initialize to all 0
    s[15:0] = 0;
    
    //alufn signal 11 is for SRA
    if(alufn[1] & alufn[0])
    {
        s[15:0] = a[15:0] >>> b[3:0];
    }
    
    //alufn signal 01 or 10 (using bitwise XOR)
    if(alufn[1] ^ alufn[0])
    {
        if(alufn[0]) //SHR if 01
            s[15:0] = a[15:0] >> b[3:0];
        
        if(alufn[1]) //SLA if 10
            s[15:0] = a[15:0] <<< b[3:0];
    }
    
    //alufn signal 00 is for SHL
    if(~alufn[1] & ~alufn[0]) //00 = shl
    {
        s[15:0] = a[15:0] << b[3:0];
    }
  }
}
