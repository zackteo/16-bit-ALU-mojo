module boolean_16bit (
    input a[16],
    input b[16],
    input alufn[6],
    output s[16]
  ) {

  always {
    // first initialise s[0] to 0 (false)
    s[0] = 0;
  
    // AND function
    if (alufn[3:0] == 1000){
      s[0] = a && b;
    }
    // OR function
    if (alufn[3:0] == 1110){
      s[0] = a || b;
    }
    // XOR function
    if (alufn[3:0] == 0110){
      s[0] = a ^ b;
    }
    // true if a function
    if (alufn[3:0] == 1010 && a[15:0]==0){
      s[0] = 1;
    }
    // true if b function (additional)
    if (alufn[3:0] == 0101 && b[15:0]==0){
      s[0] = 1;
    
    //setting the rest of the output s[15:0]
    s[15:1] = 0;
  }
}
